From 39e98638b5af402dd2119cf206914a7f5a6fe22d Mon Sep 17 00:00:00 2001
From: Chad Monroe <chad.monroe@smartrg.com>
Date: Thu, 17 Mar 2022 12:50:10 -0700
Subject: [PATCH] mt76: mt7915: read efuse data and cache to otp for sysfs
 access

Signed-off-by: Chad Monroe <chad.monroe@smartrg.com>
---
 mt7915/eeprom.c | 42 ++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 42 insertions(+)

--- a/mt7915/eeprom.c
+++ b/mt7915/eeprom.c
@@ -120,11 +120,53 @@ out:
 	return ret;
 }
 
+static int mt7915_efuse_load(struct mt7915_dev *dev, u16 eeprom_size)
+{
+	u8 free_block_num;
+	u32 block_num, i;
+
+	mt7915_mcu_get_eeprom_free_block(dev, &free_block_num);
+	/* efuse info not enough */
+	if (free_block_num >= 29)
+		return -EINVAL;
+
+	/* read eeprom data from efuse */
+	block_num = DIV_ROUND_UP(eeprom_size, MT7915_EEPROM_BLOCK_SIZE);
+
+	for (i = 0; i < block_num; i++)
+		mt7915_mcu_get_eeprom(dev, i * MT7915_EEPROM_BLOCK_SIZE);
+
+	dev_info(dev->mt76.dev, "read efuse data size=%lu, caching to OTP\n",
+			dev->mt76.eeprom.size);
+
+	/* cache to otp.. mt76_eeprom_init() will allocate new eeprom data */
+	dev->mt76.otp.data = dev->mt76.eeprom.data;
+	dev->mt76.otp.size = dev->mt76.eeprom.size;
+
+	dev->mt76.eeprom.data = NULL;
+	dev->mt76.eeprom.size = 0;
+
+	return 0;
+}
+
 static int mt7915_eeprom_load(struct mt7915_dev *dev)
 {
 	int ret;
 	u16 eeprom_size = mt7915_eeprom_size(dev);
 
+	/* allocate eeprom storage.. used to read efuse */
+	dev->mt76.eeprom.data = devm_kzalloc(dev->mt76.dev, eeprom_size, GFP_KERNEL);
+	dev->mt76.eeprom.size = eeprom_size;
+
+	if (!dev->mt76.eeprom.data)
+		return -ENOMEM;
+
+	if (mt7915_efuse_load(dev, eeprom_size) != 0) {
+		/* eeprom data pointer not saved to otp, free it */
+		devm_kfree(dev->mt76.dev, dev->mt76.eeprom.data);
+		dev->mt76.eeprom.size = 0;
+	}
+
 	ret = mt76_eeprom_init(&dev->mt76, eeprom_size);
 	if (ret < 0)
 		return ret;
