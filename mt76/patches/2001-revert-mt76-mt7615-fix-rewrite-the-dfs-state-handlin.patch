From 35434e2997ff043d272bdf298ad0f634bbbddfba Mon Sep 17 00:00:00 2001
From: Chad Monroe <chad.monroe@smartrg.com>
Date: Mon, 6 Jun 2022 15:00:33 -0700
Subject: [PATCH] Revert "mt76: mt7615: fix/rewrite the dfs state handling
 logic"

This reverts commit e0f9479bf8937bc0ff7322043a7a0554b44af29f.
---
 mt7615/init.c |  1 +
 mt7615/mac.c  | 51 +++++++++++++++++++++------------------------------
 2 files changed, 22 insertions(+), 30 deletions(-)

--- a/mt7615/init.c
+++ b/mt7615/init.c
@@ -556,6 +556,7 @@ void mt7615_init_device(struct mt7615_de
 	dev->pm.stats.last_wake_event = jiffies;
 	dev->pm.stats.last_doze_event = jiffies;
 	mt7615_cap_dbdc_disable(dev);
+	dev->phy.dfs_state = -1;
 
 #ifdef CONFIG_NL80211_TESTMODE
 	dev->mt76.test_ops = &mt7615_testmode_ops;
--- a/mt7615/mac.c
+++ b/mt7615/mac.c
@@ -2285,50 +2285,43 @@ mt7615_dfs_init_radar_specs(struct mt761
 
 int mt7615_dfs_init_radar_detector(struct mt7615_phy *phy)
 {
+	struct cfg80211_chan_def *chandef = &phy->mt76->chandef;
 	struct mt7615_dev *dev = phy->dev;
 	bool ext_phy = phy != &dev->phy;
-	enum mt76_dfs_state dfs_state, prev_state;
 	int err;
 
 	if (is_mt7663(&dev->mt76))
 		return 0;
 
-	prev_state = phy->mt76->dfs_state;
-	dfs_state = mt76_phy_dfs_state(phy->mt76);
+	if (dev->mt76.region == NL80211_DFS_UNSET) {
+		phy->dfs_state = -1;
+		if (phy->rdd_state)
+			goto stop;
 
-	if (prev_state == dfs_state)
 		return 0;
-
-	if (prev_state == MT_DFS_STATE_UNKNOWN)
-		mt7615_dfs_stop_radar_detector(phy);
-
-	if (dfs_state == MT_DFS_STATE_DISABLED)
-		goto stop;
-
-	if (prev_state <= MT_DFS_STATE_DISABLED) {
-		err = mt7615_dfs_init_radar_specs(phy);
-		if (err < 0)
-			return err;
-
-		err = mt7615_dfs_start_radar_detector(phy);
-		if (err < 0)
-			return err;
-
-		phy->mt76->dfs_state = MT_DFS_STATE_CAC;
 	}
 
-	if (dfs_state == MT_DFS_STATE_CAC)
+	if (test_bit(MT76_SCANNING, &phy->mt76->state))
+		return 0;
+
+	if (phy->dfs_state == chandef->chan->dfs_state)
 		return 0;
 
-	err = mt76_connac_mcu_rdd_cmd(&dev->mt76, RDD_CAC_END,
-				      ext_phy, MT_RX_SEL0, 0);
+	err = mt7615_dfs_init_radar_specs(phy);
 	if (err < 0) {
-		phy->mt76->dfs_state = MT_DFS_STATE_UNKNOWN;
-		return err;
+		phy->dfs_state = -1;
+		goto stop;
 	}
 
-	phy->mt76->dfs_state = MT_DFS_STATE_ACTIVE;
-	return 0;
+	phy->dfs_state = chandef->chan->dfs_state;
+
+	if (chandef->chan->flags & IEEE80211_CHAN_RADAR) {
+		if (chandef->chan->dfs_state != NL80211_DFS_AVAILABLE)
+			return mt7615_dfs_start_radar_detector(phy);
+
+		return mt76_connac_mcu_rdd_cmd(&dev->mt76, RDD_CAC_END, ext_phy,
+					       MT_RX_SEL0, 0);
+	}
 
 stop:
 	err = mt76_connac_mcu_rdd_cmd(&dev->mt76, RDD_NORMAL_START, ext_phy,
@@ -2337,8 +2330,6 @@ stop:
 		return err;
 
 	mt7615_dfs_stop_radar_detector(phy);
-	phy->mt76->dfs_state = MT_DFS_STATE_DISABLED;
-
 	return 0;
 }
 
