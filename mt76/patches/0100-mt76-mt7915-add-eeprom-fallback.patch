--- a/mt7915/eeprom.c
+++ b/mt7915/eeprom.c
@@ -4,6 +4,8 @@
 #include <linux/firmware.h>
 #include "mt7915.h"
 #include "eeprom.h"
+#include "mt7915_e2p_7915A.h"
+#include "mt7915_e2p_7915D.h"
 
 static int mt7915_eeprom_load_precal(struct mt7915_dev *dev)
 {
@@ -46,6 +48,7 @@ static int mt7915_check_eeprom(struct mt
 	}
 }
 
+#if 0
 static char *mt7915_eeprom_name(struct mt7915_dev *dev)
 {
 	switch (mt76_chip(&dev->mt76)) {
@@ -98,6 +101,7 @@ out:
 
 	return ret;
 }
+#endif
 
 static int mt7915_efuse_load(struct mt7915_dev *dev, u16 eeprom_size)
 {
@@ -282,10 +286,23 @@ int mt7915_eeprom_init(struct mt7915_dev
 		if (ret != -EINVAL)
 			return ret;
 
+		dev_info(dev->mt76.dev, "Falling back to default calibration!\n");
+		if (dev->dbdc_support) {
+			memcpy(dev->mt76.eeprom.data, MT7915_E2PImage_7915D, MT7915_EEPROM_SIZE);
+			dev_info(dev->mt76.dev, "DBDC card detected\n");
+		}
+		else {
+			dev_info(dev->mt76.dev, "Single band card detected\n");
+			memcpy(dev->mt76.eeprom.data, MT7915_E2PImage_7915A, MT7915_EEPROM_SIZE);
+		}
+		dev->flash_mode = true;
+
+#if 0
 		dev_warn(dev->mt76.dev, "eeprom load fail, use default bin\n");
 		ret = mt7915_eeprom_load_default(dev);
 		if (ret)
 			return ret;
+#endif
 	}
 
 	ret = mt7915_eeprom_load_precal(dev);
