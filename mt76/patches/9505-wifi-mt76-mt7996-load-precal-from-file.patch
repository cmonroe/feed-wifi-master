--- a/mt7996/eeprom.c
+++ b/mt7996/eeprom.c
@@ -3,6 +3,7 @@
  * Copyright (C) 2022 MediaTek Inc.
  */
 
+#include <linux/of.h>
 #include <linux/firmware.h>
 #include "mt7996.h"
 #include "eeprom.h"
@@ -436,6 +437,20 @@ static int mt7996_eeprom_load_precal(str
 	if (!dev->cal)
 		return -ENOMEM;
 
+#if defined(CONFIG_OF)
+	{
+		u32 dts_offset;
+		struct device_node *np = mdev->dev->of_node;
+
+		if (np && of_property_read_u32(np, "mediatek,eeprom-file-offset", &dts_offset) == 0) {
+			dev_warn(dev->mt76.dev, "pre-cal offset=0x%x dts offset=0x%x type=0x%x size=0x%x\n",
+					MT_EE_PRECAL, dts_offset, val, size);
+
+			return mt76_get_of_data_from_file(mdev, dev->cal, (MT_EE_PRECAL + dts_offset), size);
+		}
+	}
+#endif
+
 	if (dev->bin_file_mode)
 		return mt7996_eeprom_load_precal_binfile(dev, MT_EE_PRECAL, size);
 
--- a/mt7996/mcu.c
+++ b/mt7996/mcu.c
@@ -3693,7 +3693,7 @@ static int mt7996_mcu_set_pre_cal(struct
 	skb_put_data(skb, &req, sizeof(req));
 	skb_put_data(skb, cal, len);
 
-	return mt76_mcu_skb_send_msg(&dev->mt76, skb, MCU_WM_UNI_CMD(PRECAL_RESULT), false);
+	return mt76_mcu_skb_send_msg(&dev->mt76, skb, MCU_WM_UNI_CMD(PRECAL_RESULT), true);
 }
 
 int mt7996_mcu_apply_group_cal(struct mt7996_dev *dev)
@@ -3707,6 +3707,9 @@ int mt7996_mcu_apply_group_cal(struct mt
 		return 0;
 
 	for (idx = 0; idx < total_idx; idx++, cal += MT_EE_CAL_UNIT) {
+		dev_dbg(dev->mt76.dev, "apply group pre-cal idx=%u cal[0]=0x%02x len=%d total_idx=%d\n",
+				idx, ((unsigned char *)cal)[0], MT_EE_CAL_UNIT, total_idx);
+
 		ret = mt7996_mcu_set_pre_cal(dev, idx, cal, MT_EE_CAL_UNIT, RF_PRE_CAL);
 		if (ret)
 			goto out;
@@ -3830,6 +3833,9 @@ int mt7996_mcu_apply_tx_dpd(struct mt799
 	cal += MT_EE_CAL_GROUP_SIZE + base_offset + idx * per_chan_size;
 
 	for (i = 0; i < per_chan_size / MT_EE_CAL_UNIT; i++) {
+		dev_dbg(dev->mt76.dev, "apply DPD pre-cal i=%u cal[0]=0x%02x len=%d per_chan_size=%d cal_id=0x%x\n",
+				i, ((unsigned char *)cal)[0], MT_EE_CAL_UNIT, per_chan_size, cal_id);
+
 		ret = mt7996_mcu_set_pre_cal(dev, i, cal, MT_EE_CAL_UNIT, cal_id);
 		if (ret)
 			return ret;
