--- a/hostapd/ctrl_iface.c
+++ b/hostapd/ctrl_iface.c
@@ -262,34 +262,35 @@ void hostapd_ctrl_update_fixup( struct h
 
 	hostapd_ctrl_compute_secondary( conf );
 
-	// Fix up secondary_channel as well
+	// Fix up secondary_channel as well. (Do we 2.4G ???? )
 	center = conf->vht_oper_centr_freq_seg0_idx;
 	if ((center == 0) || (center == conf->channel))
 		conf->secondary_channel = 0;
-	else if (center < conf->channel)
-		conf->secondary_channel = -1;
-	else if (center > conf->channel)
-		conf->secondary_channel = 1;
-	else {
-		wpa_printf(MSG_ERROR, "hostapd_ctrl_update_fixup: Invalid secondary channel!");
+	else
+	{
+	    // 5G 40Mhz secondary is above when bit 2 is set
+	    conf->secondary_channel = (conf->channel & 0x4)?1:-1;
 	}
-	wpa_printf(MSG_WARNING, "ACS: hostapd_ctrl_update_fixup: vht_chwidth=%d, channel=%d, vht_center=%d",
-		conf->vht_oper_chwidth, conf->channel, conf->vht_oper_centr_freq_seg0_idx);
+	wpa_printf(MSG_WARNING, "ACS: hostapd_ctrl_update_fixup: vht_chwidth=%d, channel=%d, secondary_channel=%d, vht_center=%d",
+		conf->vht_oper_chwidth, conf->channel, conf->secondary_channel, conf->vht_oper_centr_freq_seg0_idx);
 #ifdef CONFIG_IEEE80211AX
 	if (conf->ieee80211ax == 1) {
 		center = conf->he_oper_centr_freq_seg0_idx;
 		if ((center == 0) || (center == conf->channel))
 			conf->secondary_channel = 0;
-		else if (center < conf->channel)
-			conf->secondary_channel = -1;
-		else if (center > conf->channel)
-			conf->secondary_channel = 1;
-		else {
-			wpa_printf(MSG_ERROR, "hostapd_ctrl_update_fixup: Invalid secondary channel!");
+		else
+		{
+		    // 5G 40Mhz secondary is above when bit 2 is set
+		    conf->secondary_channel = (conf->channel & 0x4)?1:-1;
+                    if( is_6ghz_op_class(conf->op_class) )
+		    {
+			// 6G 40Mhz secondary is below when bit 2 is set.
+                        conf->secondary_channel = (conf->channel & 0x4)?-1:1;
+		    }
 		}
 	}
-	wpa_printf(MSG_WARNING, "ACS: hostapd_ctrl_update_fixup: he_chwidth=%d, channel=%d, he_center=%d",
-		conf->he_oper_chwidth, conf->channel, conf->he_oper_centr_freq_seg0_idx);
+	wpa_printf(MSG_WARNING, "ACS: hostapd_ctrl_update_fixup: he_chwidth=%d, channel=%d, secondary_channel=%d, he_center=%d",
+		conf->he_oper_chwidth, conf->channel, conf->secondary_channel, conf->he_oper_centr_freq_seg0_idx);
 #endif
 }
 
--- a/src/ap/drv_callbacks.c
+++ b/src/ap/drv_callbacks.c
@@ -1145,14 +1145,17 @@ void hostapd_acs_channel_selected(struct
 
 	if (acs_res->sec_freq == 0)
 		hapd->iconf->secondary_channel = 0;
-	else if (acs_res->sec_freq < acs_res->pri_freq)
-		hapd->iconf->secondary_channel = -1;
-	else if (acs_res->sec_freq > acs_res->pri_freq)
-		hapd->iconf->secondary_channel = 1;
-	else {
-		wpa_printf(MSG_ERROR, "Invalid secondary channel!");
-		err = 1;
-		goto out;
+	else
+	{
+	    // set secondary_channel (40Mhz direction) based on primary channel
+	    if (is_6ghz_freq(acs_res->pri_freq))
+	    {
+                hapd->iconf->secondary_channel = (pri_chan->chan & 0x4)?-1:1;
+	    }
+	    else
+	    {
+                hapd->iconf->secondary_channel = (pri_chan->chan & 0x4)?1:-1;
+	    }
 	}
 
 	hapd->iconf->edmg_channel = acs_res->edmg_channel;
