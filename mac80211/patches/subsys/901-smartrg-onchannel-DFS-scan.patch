--- a/net/mac80211/scan.c
+++ b/net/mac80211/scan.c
@@ -592,11 +592,23 @@ static bool __ieee80211_can_leave_ch(str
 	return true;
 }
 
+// Add the request, so we know what channels to scan.
 static bool ieee80211_can_scan(struct ieee80211_local *local,
-			       struct ieee80211_sub_if_data *sdata)
+			       struct ieee80211_sub_if_data *sdata,
+				   struct cfg80211_scan_request *req)
 {
-	if (!__ieee80211_can_leave_ch(sdata))
-		return false;
+	// validate pointers and check for scan 1 channel, our channel
+	if ( req && local->hw.conf.chandef.chan && req->channels[0] &&
+		( req->n_channels == 1 ) &&
+		   (req->channels[0]->center_freq == local->hw.conf.chandef.chan->center_freq))
+	{
+		// Don't check leave in DFS if it is the current channel.
+	}
+	else
+	{
+		if (!__ieee80211_can_leave_ch(sdata))
+			return false;
+	}
 
 	if (!list_empty(&local->roc_list))
 		return false;
@@ -618,7 +630,7 @@ void ieee80211_run_deferred_scan(struct
 	if (!ieee80211_can_scan(local,
 				rcu_dereference_protected(
 					local->scan_sdata,
-					lockdep_is_held(&local->hw.wiphy->mtx))))
+					lockdep_is_held(&local->hw.wiphy->mtx)), local->scan_req))
 		return;
 
 	wiphy_delayed_work_queue(local->hw.wiphy, &local->scan_work,
@@ -715,10 +727,11 @@ static int __ieee80211_start_scan(struct
 	    !(sdata->vif.active_links & BIT(req->tsf_report_link_id)))
 		return -EINVAL;
 
-	if (!__ieee80211_can_leave_ch(sdata))
-		return -EBUSY;
+// No need to check here as it checks in ieee80211_can_scan()
+//	if (!__ieee80211_can_leave_ch(sdata))
+//		return -EBUSY;
 
-	if (!ieee80211_can_scan(local, sdata)) {
+	if (!ieee80211_can_scan(local, sdata, req)) {
 		/* wait for the work to finish/time out */
 		rcu_assign_pointer(local->scan_req, req);
 		rcu_assign_pointer(local->scan_sdata, sdata);
@@ -1199,8 +1212,10 @@ int ieee80211_request_ibss_scan(struct i
 				struct ieee80211_channel *tmp_ch =
 				    &local->hw.wiphy->bands[band]->channels[i];
 
+				// Don't skip DFS if it is the current channel.
 				if (tmp_ch->flags & (IEEE80211_CHAN_NO_IR |
-						     IEEE80211_CHAN_DISABLED))
+						     IEEE80211_CHAN_DISABLED) &&
+					(tmp_ch != local->hw.conf.chandef.chan))
 					continue;
 
 				local->int_scan_req->channels[n_ch] = tmp_ch;
